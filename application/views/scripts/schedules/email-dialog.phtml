<?php
if (!$this->emailEnabled) {
	return;
}
?>
	<a class='email_button' href='#' title='Click for print view.'><button>E-Mail</button></a>

	<div class='email_dialog' style='display: none;' title="<?php print $this->escape($this->schedule->getName()); ?>">

		<form action='<?php print $this->url(array('action' => 'email')); ?>' method='post'>
			<div class='row controls'>
				<input type='submit' value='Send'/>
			</div>

			<div class='row'>
				<label for='from-<?php print $this->schedule->getId(); ?>'>From: </label>
				<input id='from-<?php print $this->schedule->getId(); ?>' name='from' type='text' value="<?php print $this->getUserEmail(); ?>" readonly='readonly' disabled='disabled' size='42'/>
			</div>

			<div class='row'>
				<label for='to-<?php print $this->schedule->getId(); ?>'>To: </label>
				<input id='to-<?php print $this->schedule->getId(); ?>' name='to' type='text' size='42'/>
				<span class='hint'>(comma separated)</span>
			</div>

			<div class='row'>
				<label for='cc-<?php print $this->schedule->getId(); ?>'>CC: </label>
				<input id='cc-<?php print $this->schedule->getId(); ?>' name='cc' type='text' value="<?php print $this->getUserEmail(); ?>" readonly='readonly' disabled='disabled' size='42'/>
			</div>

			<div class='row'>
				<label for='subject-<?php print $this->schedule->getId(); ?>'>Subject:</label>
				<input id='subject-<?php print $this->schedule->getId(); ?>' name='subject' type='text' value="<?php print $this->escape($this->schedule->getName()); ?>" size='42'/>
			</div>

			<div class='row'>
				<label for='message-<?php print $this->schedule->getId(); ?>'>Message: </label>
				<textarea id='message-<?php print $this->schedule->getId(); ?>' name='message' cols='40' rows='10'>Below is my schedule, '<?php print $this->escape($this->schedule->getName()); ?>'.</textarea>
			</div>

			<input type='hidden' name='csrf_key' value='<?php print $this->csrfKey(); ?>' />
			<input type='hidden' name='schedule_id' value='<?php print $this->escape($this->schedule->getId()); ?>'/>
		</form>

		<hr/>

		<?php print $this->render('schedules/email-preview.phtml'); ?>

	</div>

<?php
if (!defined('EMAIL_DIALOG_JS_ADDED')) {
	ob_start();
?>

	$(function() { // on DOM ready

		/*********************************************************
		 * Email controls
		 *********************************************************/
		$(".email_dialog").each(function() {
			var button = $(this).siblings(".email_button");
			var emailDialog = $(this).dialog({
					autoOpen: false,
					width:  700,
					modal: true,
					position: 'top'
				});

			button.data("emailDialog", emailDialog);
		});
		$(".email_button").click(function(){
			var emailDialog = $(this).data('emailDialog');
			emailDialog.dialog("open");

			// Store the original subject.
			var field = emailDialog.find('input[name=subject]');
			if (!field.data('orig')) {
				field.data('orig', field.val());
			}

			// Store the original message.
			var field = emailDialog.find('textarea[name=message]');
			if (!field.data('orig')) {
				field.data('orig', field.val());
			}

			return false;
		});

		$(".email_dialog form").submit(function() {
			var to = $(this).find("input[name=to]").val();
			to = to.replace(/^\s*/, '').replace(/\s*$/, '');

			if (!to.length) {
				if (!confirm("You didn't specify a recipient.\n\nClick 'Cancel' to add one or 'Ok' to send only to yourself.")) {
					return false;
				}
			}
			if (to.length && !validateEmail(to)) {
				alert("It doesn't look like you specified a valid email address in the 'To:' field.");
				return false;
			}

			// Submit the form asynchronously, clear the to & body, then close.
			var form = $(this);
			var emailDialog = form.parents('.email_dialog');

			$.ajax({
				type: "POST",
				url: form.attr('action'),
				data: form.serialize(),
				success: function (data, textStatus, req) {
					if (data.length) {
						alert(data);
					}

					// Clear the form.
					form.find('input[name=to]').val('');

					var field = form.find('input[name=subject]');
					field.val(field.data('orig'));

					var field = form.find('textarea[name=message]');
					field.val(field.data('orig'));
				},
				error: function(req, textStatus, errorThrown) {
					emailDialog.dialog('open');
					alert("Couldn't send email.\n\n" + req.responseText);
				}
			});

			// Close the dialog.
			emailDialog.dialog('close');
			return false;
		});

	});

	/**
	 * Validate the email field
	 *
	 * @param string emailString
	 * @return boolean
	 */
	function validateEmail (emailString) {
		var addresses = emailString.split(",");
		for (var i = 0; i < addresses.length; i++) {
			var address = addresses[i].replace(/^\s*/, '').replace(/\s*$/, '');
			if (!validateEmailAddress(address)) {
				return false;
			}
		}
		return true;
	}

	/**
	 * Validate an email address.
	 * By "sectrean" at http://stackoverflow.com/questions/46155/validate-email-address-in-javascript/46181#46181
	 *
	 * @param string email
	 * @return boolean
	 */
	function validateEmailAddress (email) {
		var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
		return email.match(re);
	}


<?php

	$this->headScript()->appendScript(ob_get_clean());
	define('EMAIL_DIALOG_JS_ADDED', true);
}
