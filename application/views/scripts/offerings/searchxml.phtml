<?php

/**
 * Answer an absolute URL from a relative string.
 * 
 * @param string $url
 * @return string
 * @access private
 * @since 6/15/09
 */
function getAsAbsolute ($url) {
	$parts = split('/', $_SERVER['SERVER_PROTOCOL']);
	return strtolower(trim(array_shift($parts)))
		. '://' . $_SERVER['HTTP_HOST'] . $url;
}

print '<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:catalog="http://www.middlebury.edu/course_catalog">
	<channel>
		<title>'.$this->feedTitle.'</title>
		<link>'.getAsAbsolute($this->url($this->searchParams)).'</link>
		<description></description>
		<lastBuildDate>'.date('r').'</lastBuildDate>
		<generator>Course Catalog</generator>
		<docs>http://blogs.law.harvard.edu/tech/rss</docs>
';

	$alternateType = new phpkit_type_URNInetType('urn:inet:middlebury.edu:record:alternates');
	
	while ($this->sections->hasNext()) { 
		$section = $this->sections->getNextCourseOffering();
		
		$offeringParams = array(
							'controller'	=> 'offerings',
							'action'		=> 'view',
							'offering'		=> AbstractCatalogController::getStringFromOsidId($section->getId())
						);
		$resourceParams = array(
							'controller'	=> 'resources',
							'action'		=> 'view',
							'offering'		=> null
						);

		$term = $section->getTerm();
		$termUrl = getAsAbsolute($this->url(array(
						'controller'	=> 'terms',
						'action'		=> 'view',
						'term'			=> AbstractCatalogController::getStringFromOsidId($term->getId()),
						'offering'		=> null
					)));
		$topicParams = array(
						'controller'	=> 'topics',
						'action'		=> 'view',
						'offering'		=> null,
						'term'			=> AbstractCatalogController::getStringFromOsidId($term->getId())
					);
		
		// Topics
		$allTopics = AbstractCatalogController::topicListAsArray($section->getTopics());
?>
		<item>
			<title><?php print $this->escape($section->getDisplayName()); ?></title>
			<link><?php print getAsAbsolute($this->url($offeringParams)); ?></link>
			<description><![CDATA[<?php print $section->getDescription(); ?>]]></description>
			<catalog:title><?php print $this->escape($section->getTitle()); ?></catalog:title>
<?php

if ($section->hasRecordType($alternateType)) {
	$record = $section->getCourseOfferingRecord($alternateType);
	if ($record->hasAlternates()) {
		$alternates = $record->getAlternates();
		while ($alternates->hasNext()) {
			$alternate = $alternates->getNextCourseOffering();
			$offeringParams['offering'] = AbstractCatalogController::getStringFromOsidId($alternate->getId());
			print "\n\t\t\t<catalog:alternate href=\"".getAsAbsolute($this->url($offeringParams))."\">";
			print $this->escape($alternate->getDisplayName());
			print "</catalog:alternate> ";
		}
	}
}

print "\n\t\t\t<catalog:genustype href=\"".getAsAbsolute($this->url($offeringParams))."\">";
print $this->escape($section->getGenusType()->getDisplayName());
print "</catalog:genustype> ";

print "\n\t\t\t<catalog:term id=\"".AbstractCatalogController::getStringFromOsidId($term->getId())."\" href=\"".$termUrl."\">";
print $this->escape($term->getDisplayName());
print "</catalog:term> ";


$topicType = new phpkit_type_URNInetType("urn:inet:middlebury.edu:genera:topic/department");
$topicTypeString = AbstractCatalogController::getStringFromOsidType($topicType);
$topics = AbstractCatalogController::filterTopicsByType($allTopics, $topicType);
foreach ($topics as $topic) {
	$topicParams['topic'] = AbstractCatalogController::getStringFromOsidId($topic->getId());
	print "\n\t\t\t<catalog:topic type=\"".$topicTypeString."\" id=\"".AbstractCatalogController::getStringFromOsidId($topic->getId())."\" href=\"".getAsAbsolute($this->url($topicParams))."\">";
	print $this->escape($topic->getDisplayName());
	print "</catalog:topic> ";
}

$topicType = new phpkit_type_URNInetType("urn:inet:middlebury.edu:genera:topic/requirement");
$topicTypeString = AbstractCatalogController::getStringFromOsidType($topicType);
$topics = AbstractCatalogController::filterTopicsByType($allTopics, $topicType);
foreach ($topics as $topic) {
	$topicParams['topic'] = AbstractCatalogController::getStringFromOsidId($topic->getId());
	print "\n\t\t\t<catalog:topic type=\"".$topicTypeString."\" id=\"".AbstractCatalogController::getStringFromOsidId($topic->getId())."\" href=\"".getAsAbsolute($this->url($topicParams))."\">";
	print $this->escape($topic->getDisplayName());
	print "</catalog:topic> ";
}


$instructorsType = new phpkit_type_URNInetType('urn:inet:middlebury.edu:record:instructors');
if ($section->hasRecordType($instructorsType)) {
	$instructorsRecord = $section->getCourseOfferingRecord($instructorsType);
	$instructors = $instructorsRecord->getInstructors();
	while ($instructors->hasNext()) {
		$instructor = $instructors->getNextResource();
		$resourceParams['resource'] = AbstractCatalogController::getStringFromOsidId($instructor->getId());
		print "\n\t\t\t<catalog:instructor id=\"".AbstractCatalogController::getStringFromOsidId($instructor->getId())."\"  href=\"".getAsAbsolute($this->url($resourceParams))."\">";
		print $this->escape($instructor->getDisplayName());
		print "</catalog:instructor> ";
	}
}

if ($section->hasLocation()) {
	try {
		$locationResource = $section->getLocation();
		$resourceParams['resource'] = AbstractCatalogController::getStringFromOsidId($locationResource->getId());
		print "\n\t\t\t<catalog:location id=\"".AbstractCatalogController::getStringFromOsidId($locationResource->getId())."\" href=\"".getAsAbsolute($this->url($resourceParams))."\">";
		print $this->escape($locationResource->getDisplayName());
		print "</catalog:location> ";
// 		if ($locationResource->getDescription())
// 			print "<span class='location_description'>(".$this->escape($locationResource->getDescription()).")</span>";
// 		print "\n\t\t</dd>";
	} catch (osid_OperationFailedException $e) {
		print "\n\t\t\t<catalog:location>".$this->escape($section->getLocationInfo())."</catalog:location>";
	}
} else {
	print "\n\t\t\t<catalog:location>".$this->escape($section->getLocationInfo())."</catalog:location>";
}
print "\n\t\t\t<catalog:schedule>".$this->escape($section->getScheduleInfo())."</catalog:schedule>";


?>

		</item>
<?php } ?>
	</channel>
</rss>
