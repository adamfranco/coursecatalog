<?php
	$this->headLink(array('rel' => 'stylesheet', 'href' => $this->baseUrl('/StyleSheets/midd/Export.css'), 'media' => 'all'));
	$this->headScript()->appendFile($this->baseUrl('javascript/export.js'));
?>

<h1>Manage Export Configuration</h1>
<div><a href="<?php print $this->url(array('action' => 'index')); ?>">&laquo; Back to Administration</a></div>

<form action="<?php print $this->url(); ?>" method="get">
	<select name='config' onchange="this.form.submit();">
		<option value="select">Select a configuration</option>
<?php
foreach ($this->configs as $config) {
	print "<option value='".$config['label']."'".(($config == $this->config)?' selected="selected"':'').">".$config['label']."</option>";
}
?>
	</select>
</form>

<?php
	print "<div id='config-body'>";

	if($this->catalogId) {
		print "<input id='catalogId' type='hidden' value='" . $this->catalogId . "'></input>";
		print "<input id='configId' type='hidden' value='" . $this->config['id'] . "'></input>";
		print "<button onclick='newSection(null)'>Add Section</button>";
		print "<ul id='sections-list' class='sections-list'>";
	}

	if($this->latestRevision && !empty($this->latestRevisionJsonData)) {

		// Generate ahead of time as creating the dropdown every time will result in missing data.
		$courseDropdown = "
		<select class='section-dropdown'>
			<option value='unselected'>Please choose a subject</option>
			<optgroup label='Subjects'>";
			while ($this->subjects->hasNext()) {
				$topic = $this->subjects->getNextTopic();
				$courseDropdown .= "<option value='" . $this->getStringFromOsidId($topic->getId()) . "'";
				$courseDropdown .= ">" . $this->escape($topic->getDisplayName()) . "</option>";
			}
			$courseDropdown .= "
			</optgroup>
			<optgroup label='Departments'>";
			while ($this->departments->hasNext()) {
				$topic = $this->departments->getNextTopic();
				$courseDropdown .= "<option value='" . $this->getStringFromOsidId($topic->getId()) . "'";
				$courseDropdown .= ">" . $this->escape($topic->getDisplayName()) . "</option>";
			}
			$courseDropdown .= "
			</optgroup>
		</select>";

		foreach($this->latestRevisionJsonData as $key => $section) {

			// generate section value input type based on type.
			switch($section['type']) {
				case "h1":
				case "h2":
				case "page_content":
					$sectionInput = "<input class ='section-input' value='" . $section['value'] . "'></input>";
					break;
				case "custom_text":
					$sectionInput = "<textarea class='section-input' value='" . $section['value'] . "'>" . $section['value'] . "</textarea>";
					break;
				case "course_list":
					$sectionInput = $courseDropdown;
					$sectionInput = str_replace("'" . $section['value'] . "'", "'" . $section['value'] . "' selected='selected'", $sectionInput);
					$sectionInput = str_replace("<select class='section-dropdown'>", "<select class='section-dropdown' value='" . $section['value'] . "'>", $sectionInput);
					break;
			}

			print "<li id='" . $key . "' class='section'><span class='section-type'>Type: " . $section['type'] . "</span><span class='section-value'>Value: " . $sectionInput . "</span><span class='section-controls'><button class='button-section-delete' onclick='deleteSection(this)'>Delete</button><button class='button-section-add' onclick='newSection(this)'>Add Section Below</button></span></li>";
		}
	}
	else {
		if($this->catalogId) {
			print "<li id='begin-message'>Please add a new section to begin</li>";
		}
	}

	print "</ul>";

	if($this->catalogId) {
		print "<button value='save' onclick='saveJSON()'>Save</button>";
		print "<button value='reset'>Reset</button>";
	}
	
print "</div>";

?>
