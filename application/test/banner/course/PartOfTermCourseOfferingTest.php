<?php

/**
 * Test class for banner_course_CourseOffering.
 * Generated by PHPUnit on 2009-04-16 at 10:31:07.
 */
class banner_course_PartOfTermCourseOfferingTest
	extends phpkit_test_phpunit_AbstractOsidObjectTest
{
	/**
	 * @var    banner_course_CourseOffering
	 * @access protected
	 */
	protected $object;

	/**
	 * Answer the Object to test
	 *
	 * @return osid_OsidObject
	 * @access protected
	 * @since 4/15/09
	 */
	protected function getObject () {
		return $this->object;
	}

	static $runtimeManager;
	static $courseManager;

	public static function setUpBeforeClass()
	{
		self::$runtimeManager = new phpkit_AutoloadOsidRuntimeManager(realpath(dirname(__FILE__).'/../').'/configuration.plist');
		self::$courseManager = self::$runtimeManager->getManager(osid_OSID::COURSE(), 'banner_course_CourseManager', '3.0.0');
	}

	public static function tearDownAfterClass()
	{
		self::$courseManager->shutdown();
		self::$runtimeManager->shutdown();
	}

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 *
	 * @access protected
	 */
	protected function setUp()
	{

		$this->mclsCatalogId = new phpkit_id_URNInetId('urn:inet:middlebury.edu:catalog/MCLS');
		$this->hebmCourseId = new phpkit_id_URNInetId('urn:inet:middlebury.edu:course/HEBM5642');
		$this->hebmOfferingId = new phpkit_id_URNInetId('urn:inet:middlebury.edu:section/201690/92587');
		$this->mcugCatalogId = new phpkit_id_URNInetId('urn:inet:middlebury.edu:catalog/MCUG');
		$this->physCourseId = new phpkit_id_URNInetId('urn:inet:middlebury.edu:course/PHYS0201');
		$this->physOfferingId = new phpkit_id_URNInetId('urn:inet:middlebury.edu:section/200890/90143');

		$this->session = self::$courseManager->getCourseOfferingLookupSessionForCatalog($this->mclsCatalogId);
		$this->object = $this->session->getCourseOffering($this->hebmOfferingId);

		$this->instructorsType = new phpkit_type_URNInetType('urn:inet:middlebury.edu:record:instructors');
		$this->weeklyScheduleType = new phpkit_type_URNInetType('urn:inet:middlebury.edu:record:weekly_schedule');
		$this->alternatesType = new phpkit_type_URNInetType('urn:inet:middlebury.edu:record:alternates');


		$this->namesType = new phpkit_type_URNInetType('urn:inet:middlebury.edu:record:person_names');
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 *
	 * @access protected
	 */
	protected function tearDown()
	{
	}

	/**
	 *
	 */
	public function testGetTermId()
	{
		$this->assertInstanceOf('osid_id_Id', $this->object->getTermId());
		$this->assertEquals('term/201690/HBM', $this->object->getTermId()->getIdentifier());
	}

	/**
	 *
	 */
	public function testGetTerm()
	{
		$term = $this->object->getTerm();
		$this->assertInstanceOf('osid_course_Term', $term);
		$this->assertEquals('term/201690/HBM', $term->getId()->getIdentifier());
	}

	/**
	 *
	 */
	public function testTermStartDate()
	{
		$term = $this->object->getTerm();
		$this->assertEquals(new DateTime('2016-09-18'), $term->getStartTime());
	}

	/**
	 *
	 */
	public function testTermEndDate()
	{
		$term = $this->object->getTerm();
		$this->assertEquals(new DateTime('2016-12-07'), $term->getEndTime());
	}

	public function testOfferingFoundInBaseTerm()
	{
		$offerings = $this->session->getCourseOfferingsByTermForCourse(new phpkit_id_URNInetId('urn:inet:middlebury.edu:term/201690'), $this->hebmCourseId);
		$this->assertTrue($offerings->hasNext());
		$offering = $offerings->getNextCourseOffering();
		$this->assertTrue($this->hebmOfferingId->isEqual($offering->getId()));
	}

	public function testOfferingFoundInPartOfTerm()
	{
		$offerings = $this->session->getCourseOfferingsByTermForCourse(new phpkit_id_URNInetId('urn:inet:middlebury.edu:term/201690/HBM'), $this->hebmCourseId);
		$this->assertTrue($offerings->hasNext());
		$offering = $offerings->getNextCourseOffering();
		$this->assertTrue($this->hebmOfferingId->isEqual($offering->getId()));
	}

}
