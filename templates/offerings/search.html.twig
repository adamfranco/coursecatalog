<form action="{{ form_action }}" method="get">
    <table class='search_options'>
        <tr>
            <td colspan='2'><input type='submit' name='search' value='Search'/></td>
        </tr>
        <tr>
            <th>By Term:</th>
            <td>
                <select name="term" onchange="this.form['search'].value = ''; this.form.submit();">
                    <option value='ANY'>Any Term</option>
{% for term in terms %}
                    <option value="{{ osidIdToString(term.id) }}" {{ osidIdsEqual(selectedTermId, term.id)? 'selected="selected"' }}>{{ term.displayname }}</option>
{% endfor %}
                </select>
            </td>
        </tr>

        <tr>
            <th>By Subject/Department:</th>
            <td>
                <select name="department">
                    <option value=''>Any Subject or Department</option>
                    <optgroup label='Subjects'>
{% for topic in subjects %}
                        <option value="{{ osidIdToString(topic.id) }}" {{ osidIdsEqual(selectedDepartmentId, topic.id)? 'selected="selected"' }}>{{ topic.displayname }}</option>
{% endfor %}
                    </optgroup>
                    <optgroup label='Departments'>
{% for topic in departments %}
                        <option value="{{ osidIdToString(topic.id) }}" {{ osidIdsEqual(selectedDepartmentId, topic.id)? 'selected="selected"' }}>{{ topic.displayname }}</option>
{% endfor %}
                    </optgroup>
                </select>
            </td>
        </tr>

{% if requirements is not empty %}
        <tr>
            <th>Satisfies Requirements:</th>
            <td>
                <div class='help_text'>(Leave all blank for no preference)</div>
                <div class='requirement_group'>
{% for topic in requirements %}
{% if loop.index is divisible by(5) %}
                </div>
                <div class='requirement_group'>
{% endif %}
                    <input type='checkbox' name='requirement[]' value="{{ osidIdToString(topic.id) }}" id="input-requirement-{{ osidIdToString(topic.id) }}" {{ osidIdInArray(topic.id, selectedRequirementIds)? 'checked="checked"' }}/><label for="input-requirement-{{ osidIdToString(topic.id) }}">{{ topic.displayname }}</label><br/>
{% endfor %}
                </div>
            </td>
        </tr>
{% endif %}

        <tr>
            <th>Keywords:</th>
            <td>
                <input class='text_input' type='text' name='keywords' value="{{ keywords }}" />
                <div class='help_text'>By default results only have to match one of the supplied keywords. Use a plus (+) before a word to require it or a minus (-) to exclude it. Use an asterisk (*) as a wildcard.</div>
            </td>
        </tr>

{% if searchParams.days is iterable %}
        <tr>
            <th>Days of the week:</th>
            <td>

                <input type='checkbox' name='days[]' value='sunday' id='input-days-sunday' {{ 'sunday' in searchParams.days ? 'checked="checked"' }} /> <label for='input-days-sunday'>Sunday</label>
                <input type='checkbox' name='days[]' value='monday' id='input-days-monday' {{ 'monday' in searchParams.days ? 'checked="checked"' }} /> <label for='input-days-monday'>Monday</label>
                <input type='checkbox' name='days[]' value='tuesday' id='input-days-tuesday' {{ 'tuesday' in searchParams.days ? 'checked="checked"' }} /> <label for='input-days-tuesday'>Tuesday</label>
                <input type='checkbox' name='days[]' value='wednesday' id='input-days-wednesday' {{ 'wednesday' in searchParams.days ? 'checked="checked"' }} /> <label for='input-days-wednesday'>Wednesday</label>
                <input type='checkbox' name='days[]' value='thursday' id='input-days-thursday' {{ 'thursday' in searchParams.days ? 'checked="checked"' }} /> <label for='input-days-thursday'>Thursday</label>
                <input type='checkbox' name='days[]' value='friday' id='input-days-friday' {{ 'friday' in searchParams.days ? 'checked="checked"' }} /> <label for='input-days-friday'>Friday</label>
                <input type='checkbox' name='days[]' value='saturday' id='input-days-saturday' {{ 'saturday' in searchParams.days ? 'checked="checked"' }} /> <label for='input-days-saturday'>Saturday</label>
                <div class='help_text'>Leave all unchecked if no preference.</div>
                <br/>
                <input type='radio' name='days_mode' value='inclusive' id='input-days_mode-inclusive' {{ searchParams.days_mode is empty or searchParams.days_mode == 'inclusive'  ? 'checked="checked"' }} /> <label for='input-days_mode-inclusive'>Inclusive search -- meets on all of the selected days and possibly others</label>
                <br/>
                <input type='radio' name='days_mode' value='exclusive' id='input-days_mode-exclusive' {{ searchParams.days_mode == 'exclusive'  ? 'checked="checked"' }} /> <label for='input-days_mode-exclusive'>Exclusive search -- meets only on selected days, not on unselected days</label>
            </td>
        </tr>

        <tr>
            <th>Time:</th>
            <td>
                <label for="input-time_start">From</label>
                <select name='time_start' id="input-time_start" class='time_select'>
                    <option value='0' {{ timeStart is empty ? "selected='selected'" }}>Any Time</option>
{% for s in range(1800, 84600, 1800) %}
                    <option value="{{ s }}" {{ timeStart == s ? "selected='selected'" }}>{{ secondsToTime(s) }}</option>
{% endfor %}
                </select>

                <label for="input-time_end">To</label>
                <select name='time_end' id="input-time_end" class='time_select'>
{% for s in range(1800, 84600, 1800) %}
                    <option value="{{ s }}" {{ timeEnd == s ? "selected='selected'" }}>{{ secondsToTime(s) }}</option>
{% endfor %}
                    <option value='86400' {{ timeEnd == 86400 ? "selected='selected'" }}>Any Time</option>
                </select>
                </label>
            </td>
        </tr>
{% endif %}

        <tr>
            <th>Type:</th>
            <td>
                <div class='help_text'>(Leave all blank for no preference)</div>
                <div class='requirement_group'>
{% for type in genusTypes %}
{% if loop.index is divisible by(5) %}
                </div>
                <div class='requirement_group'>
{% endif %}
                    <input type='checkbox' name='type[]' value="{{ osidTypeToString(type) }}" id="input-requirement-{{ osidTypeToString(type) }}" {{ osidTypeInArray(type, selectedGenusTypes)? 'checked="checked"' }}/> <label for="input-type-{{ osidTypeToString(type) }}">{{ type.displayname }}</label><br/>
{% endfor %}
                </div>
            </td>
        </tr>

{% if blocks is not empty %}
        <tr>
            <th>Additional Details:</th>
            <td>
                <div class='help_text'>(Leave all blank for no preference)</div>
                <div class='requirement_group'>
{% for topic in blocks %}
{% if loop.index is divisible by(5) %}
                </div>
                <div class='requirement_group'>
{% endif %}
                    <input type='checkbox' name='block[]' value="{{ osidIdToString(topic.id) }}" id="input-block-{{ osidIdToString(topic.id) }}" {{ osidIdInArray(topic.id, selectedBlockIds)? 'checked="checked"' }}/><label for="input-block-{{ osidIdToString(topic.id) }}">{{ topic.displayname }}</label><br/>
{% endfor %}
                </div>
            </td>
        </tr>
{% endif %}

{% if instructionMethods is not empty %}
        <tr>
            <th>Course Modality:</th>
            <td>
                <div class='help_text'>(Leave all blank for no preference)</div>
                <div class='requirement_group'>
{% for topic in instructionMethods %}
{% if loop.index is divisible by(5) %}
                </div>
                <div class='requirement_group'>
{% endif %}
                    <input type='checkbox' name='instruction_method[]' value="{{ osidIdToString(topic.id) }}" id="input-instruction_method-{{ osidIdToString(topic.id) }}" {{ osidIdInArray(topic.id, selectedInstructionMethodIds)? 'checked="checked"' }}/><label for="input-instruction_method-{{ osidIdToString(topic.id) }}">{{ topic.displayname }}</label><br/>
{% endfor %}
                </div>
            </td>
        </tr>
{% endif %}

        <tr>
            <th>Level:</th>
            <td>
                <div class='help_text'>(Leave all blank for no preference)</div>
                <div class='requirement_group'>
{% for topic in levels %}
{% if loop.index is divisible by(5) %}
                </div>
                <div class='requirement_group'>
{% endif %}
                    <input type='checkbox' name='level[]' value="{{ osidIdToString(topic.id) }}" id="input-level-{{ osidIdToString(topic.id) }}" {{ osidIdInArray(topic.id, selectedLevelIds)? 'checked="checked"' }}/><label for="input-level-{{ osidIdToString(topic.id) }}">{{ topic.displayname }}</label><br/>
{% endfor %}
                </div>
            </td>
        </tr>

{% if campuses is not empty %}
        <tr>
            <th>Campus:</th>
            <td>
                <div class='help_text'>(Leave all blank for no preference)</div>
                <div class='requirement_group'>
{% for resource in campuses %}
{% if loop.index is divisible by(5) %}
                </div>
                <div class='requirement_group'>
{% endif %}
                    <input type='checkbox' name='campus[]' value="{{ osidIdToString(resource.id) }}" id="input-campus-{{ osidIdToString(resource.id) }}" {{ osidIdInArray(resource.id, selectedCampusIds)? 'checked="checked"' }}/><label for="input-campus-{{ osidIdToString(resource.id) }}">{{ resource.displayname }}</label><br/>
{% endfor %}
                </div>
            </td>
        </tr>
{% endif %}

        <tr>
            <td colspan='2'><input type='submit' name='search' value='Search'/></td>
        </tr>

    </table>
</form>




<hr>

$this->headScript()->appendFile(
    $this->url(array(), null, true).'javascript/jquery.expander.js',
    'text/javascript'
);
$this->headScript()->appendScript(
    "
    $('document').ready(function() {
        $('div.description').expander({
            slicePoint:       140,  // default is 100
            expandPrefix:     '... ', // text to come before the expand link
            expandText:         'read more', // default is 'read more...'
            userCollapseText: '[collapse]'  // default is '[collapse expanded text]'
        });
    });
    ",
    'text/javascript'
);

    $formParams = array(
                            'controller'	=> 'offerings',
                            'action'		=> 'search',
                            'term'			=> null,
                            'department'	=> null,
                            'subject'		=> null,
                            'division'		=> null,
                            'requirement'	=> null,
                            'level'	=> null,
                            'days'			=> null,
                            'time_start'	=> null,
                            'time_end'		=> null,
                            'keywords'		=> null,
                            'page'			=> null,
                            'submit'		=> null
                        );
?>







<?php
/*********************************************************
 * Search results
 *********************************************************/
if (isset($this->paginator)) {

?>
<h2>Results</h2>

<?php
if (!count($this->paginator)) {
    print "<div class='search_empty'>No Matches</div>";
}

print $this->paginationControl($this->paginator, 'Sliding', 'ItemPaginationControl.phtml', array('search_params' => $this->searchParams)); ?>

<table class='search_results'>
    <tbody>
<?php
    $alternateType = new phpkit_type_URNInetType('urn:inet:middlebury.edu:record:alternates');

    foreach ($this->paginator as $section) {
        $offeringParams = array(
                            'controller'	=> 'offerings',
                            'action'		=> 'view',
                            'offering'		=> $this->getStringFromOsidId($section->getId())
                        );
        $resourceParams = array(
                            'controller'	=> 'resources',
                            'action'		=> 'view',
                            'term'			=> $this->getStringFromOsidId($term->getId()),
                            'offering'		=> null
                        );

        $term = $section->getTerm();
        $termUrl = $this->url(array(
                        'controller'	=> 'terms',
                        'action'		=> 'view',
                        'term'			=> $this->getStringFromOsidId($term->getId()),
                        'offering'		=> null
                    ));
        $topicParams = array(
                        'controller'	=> 'topics',
                        'action'		=> 'view',
                        'offering'		=> null,
                        'term'			=> $this->getStringFromOsidId($term->getId())
                    );

        // Topics
        $allTopics = $this->topicListAsArray($section->getTopics());
?>
        <tr>
            <td class='column1'>
                <a class='title' href='<?php print $this->url($offeringParams); ?>'><?php print $this->escape($section->getDisplayName()); ?></a>
<?php

if ($section->hasRecordType($alternateType)) {
    $record = $section->getCourseOfferingRecord($alternateType);
    if ($record->hasAlternates()) {
        if ($record->isPrimary()) {
            print " * ";
        }

        $alternates = $record->getAlternates();
        print "\n\t\t\t\t<br/>Cross-Listed As:";
        while ($alternates->hasNext()) {
            print "\n\t\t\t\t<br/>";
            $alternate = $alternates->getNextCourseOffering();
            $offeringParams['offering'] = $this->getStringFromOsidId($alternate->getId());
            print "<a class='title' href=\"".$this->url($offeringParams)."\">";
            print $this->escape($alternate->getDisplayName());
            print "</a> ";
            if ($alternate->hasRecordType($alternateType)) {
                $alternateRecord = $alternate->getCourseOfferingRecord($alternateType);
                if ($alternateRecord->isPrimary()) {
                    print " * ";
                }
            }
        }
    }
}

print "\n\t<dl>";

print "\n\t\t<dt>Type:</dt>";
print "\n\t\t<dd>".$this->escape($section->getGenusType()->getDisplayName())."</dd>";

$topics = $this->filterTopicsByType($allTopics, new phpkit_type_URNInetType("urn:inet:middlebury.edu:genera:topic.instruction_method"));
if (!empty($topics)) {
    print "\n\t\t<dt>Course Modality:</dt>";
    print "\n\t\t<dd>";
    foreach ($topics as $topic) {
        $topicParams['topic'] = $this->getStringFromOsidId($topic->getId());
        print "<a href=\"".$this->url($topicParams)."\">";
        print $this->escape($topic->getDisplayName());
        print "</a> ";
    }
    print "</dd>";
}

print "\n\t\t<dt>Term:</dt>";
+print "\n\t\t<dd>";
+// print "\n\t\t\t<a href='".$termUrl."'>";
+print $this->escape($term->getDisplayName());
+// print "</a>";
+print "\n\t\t</dd>";
print "\n\t\t<dt>Department:</dt>";
print "\n\t\t<dd>";
$topics = $this->filterTopicsByType($allTopics, new phpkit_type_URNInetType("urn:inet:middlebury.edu:genera:topic.department"));
foreach ($topics as $topic) {
    $topicParams['topic'] = $this->getStringFromOsidId($topic->getId());
    print "<a href=\"".$this->url($topicParams)."\">";
    print $this->escape($topic->getDisplayName());
    print "</a> ";
}
print "</dd>";

print "\n\t\t<dt>Requirements Fulfilled:</dt>";
print "\n\t\t<dd>";
$topics = $this->filterTopicsByType($allTopics, new phpkit_type_URNInetType("urn:inet:middlebury.edu:genera:topic.requirement"));
foreach ($topics as $topic) {
    $topicParams['topic'] = $this->getStringFromOsidId($topic->getId());
    print "<a href=\"".$this->url($topicParams)."\">";
    print $this->escape($topic->getDisplayName());
    print "</a> ";
}
print "</dd>";

print "\n\t</dl>";

$topics = $this->filterTopicsByType($allTopics, new phpkit_type_URNInetType("urn:inet:middlebury.edu:genera:topic.block"));
if (!empty($topics)) {
    print "\n\t\t<dt>Additional Details:</dt>";
    print "\n\t\t<dd>";
    foreach ($topics as $topic) {
        $topicParams['topic'] = $this->getStringFromOsidId($topic->getId());
        print "<a href=\"".$this->url($topicParams)."\">";
        print $this->escape($topic->getDisplayName());
        print "</a> ";
    }
    print "</dd>";
}

?>


            </td>
            <td class='column2'>
                <?php
                $this->bookmarks_CourseId = $section->getCourseId();
                $this->bookmarks_IsCourseSaved = false;
                print $this->render('schedules/bookmark_control.phtml');
                ?>
                <div class='title'><?php print nl2br($this->escape($section->getTitle())); ?></div>
                <div class='description'><?php print $section->getDescription(); ?></div>
<?php
print "\n\t<dl>";

$instructorsType = new phpkit_type_URNInetType('urn:inet:middlebury.edu:record:instructors');
if ($section->hasRecordType($instructorsType)) {
    $instructorsRecord = $section->getCourseOfferingRecord($instructorsType);
    print "\n\t\t<dt>Instructors:</dt>";
    print "\n\t\t<dd>";
    $instructors = $instructorsRecord->getInstructors();
    while ($instructors->hasNext()) {
        $instructor = $instructors->getNextResource();
        $resourceParams['resource'] = $this->getStringFromOsidId($instructor->getId());
        print "<a href=\"".$this->url($resourceParams)."\">";
        print $this->escape($instructor->getDisplayName());
        print "</a> ";
    }
    print "</dd>";
}

if ($section->hasLocation()) {
    print "\n\t\t<dt>Location:</dt>";
    try {
        $locationResource = $section->getLocation();
        print "\n\t\t<dd>";
// 		$resourceParams['resource'] = $this->getStringFromOsidId($locationResource->getId());
// 		print "<a href=\"".$this->url($resourceParams)."\">";
        print $this->escape($locationResource->getDisplayName());
// 		print "</a> ";
        if ($locationResource->getDescription())
            print " <span class='location_description'>(".$this->escape($locationResource->getDescription()).")</span>";
        print "\n\t\t</dd>";
    } catch (osid_OperationFailedException $e) {
        print "\n\t\t<dd>".$this->escape($section->getLocationInfo())."</dd>";
    }
} else if ($section->getLocationInfo()) {
    print "\n\t\t<dt>Location:</dt>";
    print "\n\t\t<dd>".$this->escape($section->getLocationInfo())."</dd>";
}

$scheduleInfo = $section->getScheduleInfo();
if (!empty($scheduleInfo)) {
    print "\n\t\t<dt>Schedule:</dt>";
    print "\n\t\t<dd>".$this->formatScheduleInfo($scheduleInfo)."</dd>";
}

$availabilityLink = $this->getAvailabilityLink($section);
if (!empty($availabilityLink)) {
    print "\n\t\t<dt>Availability:</dt>";
    print "\n\t\t<dd>";
    print $availabilityLink;
    print "\n\t\t</dd>";
}

// print "\n\t<dt>Subject:</dt>";
// print "\n\t\t<dd>";
// $topics = $this->filterTopicsByType($allTopics, new phpkit_type_URNInetType("urn:inet:middlebury.edu:genera:topic.subject"));
// foreach ($topics as $topic) {
// 	$topicParams['topic'] = $this->getStringFromOsidId($topic->getId());
// 	print "<a href=\"".$this->url($topicParams)."\">";
// 	print $this->escape($topic->getDisplayName());
// 	print "</a> ";
// }
// print "</dd>";

// print "\n\t\t<dt>Division:</dt>";
// print "\n\t\t<dd>";
// $topics = $this->filterTopicsByType($allTopics, new phpkit_type_URNInetType("urn:inet:middlebury.edu:genera:topic.division"));
// foreach ($topics as $topic) {
// 	$topicParams['topic'] = $this->getStringFromOsidId($topic->getId());
// 	print "<a href=\"".$this->url($topicParams)."\">";
// 	print $this->escape($topic->getDisplayName());
// 	print "</a> ";
// }
// print "</dd>";

print "\n\t</dl>";


?>
            </td>
        </tr>
<?php } ?>
    </tbody>
</table>

<?php print $this->paginationControl($this->paginator, 'Sliding', 'SearchPaginationControl.phtml', array('search_params' => $this->searchParams)); ?>

<?php } ?>
